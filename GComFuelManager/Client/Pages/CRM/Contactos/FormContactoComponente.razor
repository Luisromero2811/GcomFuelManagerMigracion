@page "/crm/contactos/formulario"
@page "/crm/contactos/formulario/{Id:int}"

@inject IRepositorio http
@inject SweetAlertService swal
@inject CRMContactoPostValidator validator
@inject NavigationManager navigation
@attribute [Authorize(Roles = "Admin, CREAR_CONTACTO, EDITAR_CONTACTO")]

<AuthorizeView Roles="Admin, CREAR_CONTACTO, EDITAR_CONTACTO">
    <Authorized>
        <Card LoadingContent="loading_info">
            <Header>
                <div class="d-flex justify-content-between">
                    <div>
                        <b>Formulario de contacto</b>
                    </div>
                    <div>
                        <div class="btn-group">
                            <NavLink class="g-1 btn gcom-bg-amarillo" href="crm/contactos" Match="NavLinkMatch.All">
                                <i class="fa fa-solid fa-arrow-left" /> Volver
                            </NavLink>
                            <NavLink class="btn gcom-bg-rojo" href="crm/listado/actividades" Match="NavLinkMatch.All">
                                Actividades
                            </NavLink>
                        </div>
                    </div>
                </div>
            </Header>
            <Body>
                <EditForm Model="CRMContacto" class="col-12 g-3" OnValidSubmit="GuardarContacto" Context="CONTACTOFORM">
                    <FluentValidationValidator Validator="validator" />
                    <ValidationSummary />
                    <Card HeaderText="Datos principales">
                        <Body>
                            <div class="col-12 row">

                                <div class="col-md-4 col-12">
                                    <label>Nombre/s</label>
                                    <InputText @bind-Value="CRMContacto.Nombre" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Nombre)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Apellido/s</label>
                                    <InputText @bind-Value="CRMContacto.Apellidos" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Apellidos)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Titulo</label>
                                    <InputText @bind-Value="CRMContacto.Titulo" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Titulo)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Departamento</label>
                                    <InputText @bind-Value="CRMContacto.Departamento" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Departamento)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Cuenta</label>
                                    <DropDownFilter Listado="Clientes" TListado="CRMCliente" TValue="int" Default_Placeholder="Seleccione una cuenta" FiltrarValor="ObtenerClientes"
                                                    @bind-Valor="@CRMContacto.CuentaId" Propiedad_Valor="Id">
                                        <RenderValue Context="item">
                                            @item.Nombre
                                        </RenderValue>
                                        <Render Context="item">
                                            @item.Nombre
                                        </Render>
                                    </DropDownFilter>
                                    <InputSelect @bind-Value="CRMContacto.CuentaId" class="d-none" />
                                    <ValidationMessage For="@(()=>CRMContacto.CuentaId)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Division</label>
                                    <InputSelect @bind-Value="CRMContacto.DivisionId" class="form-select">
                                        <option>-- seleccione un división --</option>
                                        @foreach (var item in Divisiones)
                                        {
                                            <option value="@item.Id">@item.Nombre</option>
                                        }
                                    </InputSelect>
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Tel. oficina</label>
                                    <InputText @bind-Value="CRMContacto.Tel_Oficina" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Tel_Oficina)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Tel. móvil</label>
                                    <InputText @bind-Value="CRMContacto.Tel_Movil" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Tel_Movil)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Sitio Web</label>
                                    <InputText @bind-Value="CRMContacto.SitioWeb" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.SitioWeb)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Correo electrónico</label>
                                    <InputText @bind-Value="CRMContacto.Correo" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Correo)" />
                                </div>
                            </div>
                        </Body>
                    </Card>
                    <Card HeaderText="Dirección principal">
                        <Body>
                            <div class="col-12 row">

                                <div class="col-md-4 col-12">
                                    <label>Calle</label>
                                    <InputTextArea @bind-Value="CRMContacto.Calle" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Calle)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Colonia</label>
                                    <InputText @bind-Value="CRMContacto.Colonia" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Colonia)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Ciudad</label>
                                    <InputText @bind-Value="CRMContacto.Ciudad" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Ciudad)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Estado</label>
                                    <InputText @bind-Value="CRMContacto.Estado" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Estado)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>C.P.</label>
                                    <InputText @bind-Value="CRMContacto.CP" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.CP)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>País</label>
                                    <InputText @bind-Value="CRMContacto.Pais" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Pais)" />
                                </div>
                            </div>
                        </Body>
                    </Card>
                    <Card HeaderText="Información adicional">
                        <Body>
                            <div class="col-12 row">

                                <div class="col-md-4 col-12">
                                    <label>Estatus</label>
                                    <InputSelect @bind-Value="CRMContacto.EstatusId" class="form-select">
                                        <option>-- seleccione un estado --</option>
                                        @foreach (var item in Catalogo_Estados)
                                        {
                                            <option value="@item.Id">@item.Valor</option>
                                        }
                                    </InputSelect>
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Descripción de estatus</label>
                                    <InputTextArea @bind-Value="CRMContacto.Estatus_Desc" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Estatus_Desc)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Origen de contacto</label>
                                    <InputSelect @bind-Value="CRMContacto.OrigenId" class="form-select">
                                        <option>-- seleccione un origen --</option>
                                        @foreach (var item in Catalogo_Origen)
                                        {
                                            <option value="@item.Id">@item.Valor</option>
                                        }
                                    </InputSelect>
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Recomendación</label>
                                    <InputText @bind-Value="CRMContacto.Recomen" class="form-control" />
                                    <ValidationMessage For="@(()=>CRMContacto.Recomen)" />
                                </div>
                                <div class="col-md-4 col-12">
                                    <label>Asignado a</label>
                                    <DropDownFilter Listado="Vendedores" TListado="CRMVendedorDTO" TValue="int" Default_Placeholder="Seleccione un vendedor" FiltrarValor="ObtenerVendedores"
                                                    @bind-Valor="@CRMContacto.VendedorId" Propiedad_Valor="Id">
                                        <RenderValue Context="item">
                                            @item.Nombre @item.Apellidos - @item.NombreDivision - @item.Tel_Movil @item.Correo
                                        </RenderValue>
                                        <Render Context="item">
                                            @item.Nombre @item.Apellidos - @item.NombreDivision - @item.Tel_Movil @item.Correo
                                        </Render>
                                    </DropDownFilter>
                                    <InputSelect @bind-Value="CRMContacto.VendedorId" class="d-none" />
                                    <ValidationMessage For="@(()=>CRMContacto.VendedorId)" />
                                </div>
                            </div>
                        </Body>
                    </Card>

                    <div class="col-md-4 col-12 d-flex mt-2">
                        <button type="submit" class="btn gcom-bg-amarillo col-12 mt-auto">
                            <i class="fa fa-solid fa-floppy-disk" />
                            Guardar
                            @if (loading_save)
                            {
                                <SpinnerLoading />
                            }
                        </button>
                    </div>
                </EditForm>
            </Body>
        </Card>
    </Authorized>
</AuthorizeView>

@code {
    [Parameter] public int Id { get; set; }

    CRMContactoPostDTO CRMContacto = new();

    List<CRMCliente> Clientes = new();
    List<CRMCatalogoValor> Catalogo_Estados = new();
    List<CRMCatalogoValor> Catalogo_Origen = new();
    List<CRMVendedorDTO> Vendedores = new();
    List<CRMDivision> Divisiones = new();

    bool loading_info = false;
    bool loading_save = false;

    protected override async Task OnInitializedAsync()
    {
        await Task.WhenAll(
        ObtenerClientes(),
        ObtenerCatalogoStatus(),
        ObtenerCatalogoOrigen(),
        ObtenerVendedores(),
        ObtenerDivisiones());

        if (Id != 0)
            await ObtenerContacto();
    }

    private async Task ObtenerVendedores(string value = "")
    {
        try
        {
            Dictionary<string, string> query = new();
            query["Nombre"] = value;

            var uri = Constructor_De_URL_Parametros.Generar_URL(query);

            var response = await http.Get<List<CRMVendedorDTO>>($"api/crmvendedor?{uri}");
            if (response.Error)
            {
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                Vendedores = response.Response;
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

    private async Task ObtenerCatalogoStatus()
    {
        try
        {
            var response = await http.Get<List<CRMCatalogoValor>>($"api/crmcontactos/catalogo/status");
            if (response.Error)
            {
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                Catalogo_Estados = response.Response;
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

    private async Task ObtenerCatalogoOrigen()
    {
        try
        {
            var response = await http.Get<List<CRMCatalogoValor>>($"api/crmcontactos/catalogo/origen");
            if (response.Error)
            {
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                Catalogo_Origen = response.Response;
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

    private async Task ObtenerClientes(string value = "")
    {
        try
        {
            Dictionary<string, string> query = new();
            query["Nombre"] = value;

            var uri = Constructor_De_URL_Parametros.Generar_URL(query);

            var response = await http.Get<List<CRMCliente>>($"api/crmcliente?{uri}");
            if (response.Error)
            {
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                Clientes = response.Response;
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

    private async Task GuardarContacto()
    {
        try
        {
            loading_save = true;
            var response = await http.Post<CRMContactoPostDTO>($"api/crmcontactos", CRMContacto);
            if (response.Error)
            {
                loading_save = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_save = false;
                if (Id != 0)
                    navigation.NavigateTo("crm/contactos", false);
                else
                    CRMContacto = new();
            }
        }
        catch (Exception e)
        {
            loading_save = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

    private async Task ObtenerContacto()
    {
        try
        {
            loading_info = true;
            var response = await http.Get<CRMContactoPostDTO>($"api/crmcontactos/{Id}");
            if (response.Error)
            {
                loading_info = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_info = false;
                CRMContacto = response.Response;
            }
        }
        catch (Exception e)
        {
            loading_info = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

    private async Task ObtenerDivisiones()
    {
        try
        {
            var response = await http.Get<List<CRMDivision>>($"api/crmdivision");
            if (response.Error)
            {
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                Divisiones = response.Response;
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }
}
