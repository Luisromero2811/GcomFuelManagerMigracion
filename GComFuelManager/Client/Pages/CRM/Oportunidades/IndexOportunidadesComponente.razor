@page "/crm/oportunidades"
@inject IRepositorio http
@inject SweetAlertService swal
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin, VER_MODULO_OPORTUNIDADES")]

<AuthorizeView Roles="Admin, VER_MODULO_OPORTUNIDADES">
    <Authorized>
        <Card HeaderClass="d-flex justify-content-between">
            <Header>
                <b>Oportunidades</b>
                <NavLink Match="NavLinkMatch.All" href="../" class="g-1 btn gcom-bg-amarillo">
                    <i class="fa fa fa-arrow-left" /> Volver
                </NavLink>
            </Header>
        </Card>
        <div class="col-12 my-2 d-md-flex justify-content-md-between d-grid gap-2">
            <AuthorizeView Roles="Admin, CREAR_OPORTUNIDAD">
                <Authorized Context="CREAROPORTUNIDAD">
                    <div class="col-md-2 col-12">
                        <NavLink Match="NavLinkMatch.All" href="crm/oportunidades/formulario" class="btn btn-sm gcom-bg-amarillo col-12 g-1">
                            <i class="fa fa-solid fa-plus" /> Agregar
                        </NavLink>
                    </div>

                </Authorized>
            </AuthorizeView>
            <div class="col-md-2 col-12">
                <button class="btn col-12 gcom-bg-amarillo btn-sm g-1" @onclick="ExportarOportunidades">
                    <i class="fa fa-solid fa-file-excel"></i>
                    Exportar
                </button>
            </div>
        </div>

        <AuthorizeView Roles="Admin, VER_OPORTUNIDADES">
            <Authorized Context="VEROPORTUNIDADES">
                <div class="ancho-tabla">
                    <Tabla Datos="Oportunidades" Cargando="loading_info">
                        <Cabeceras>
                            <tr>
                                <AuthorizeView Roles="Admin, VER_DETALLE_OPORTUNIDAD, EDITAR_OPORTUNIDAD, ELIMINAR_OPORTUNIDAD, VER_DOCUMENTOS">
                                    <Authorized Context="ACCIONES">
                                        <th style="max-width:185px;"></th>
                                    </Authorized>
                                </AuthorizeView>
                                <th>Oportunidad</th>
                                <th>Cuenta</th>
                                <th>Contacto</th>
                                <th>Fecha de Creación</th>
                                <th>Etapa de venta</th>
                                <th>Valor</th>
                                <th>Division</th>
                                <th>Equipo</th>
                                <th>Vendedor</th>
                                <th>Probabilidad</th>
                            </tr>
                        </Cabeceras>
                        <Filtros>
                            <tr>
                                <AuthorizeView Roles="Admin, VER_DETALLE_OPORTUNIDAD, EDITAR_OPORTUNIDAD, ELIMINAR_OPORTUNIDAD, VER_DOCUMENTOS">
                                    <Authorized Context="ACCIONES">
                                        <td></td>
                                    </Authorized>
                                </AuthorizeView>
                                <td>
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                                        <input type="text" class="form-control" @bind-value="filtro.Nombre_Opor" @oninput="FiltrarNombre" />
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                                        <input class="form-control form-control-sm" @bind-value="filtro.Cuenta" @oninput="FiltrarCuenta" />
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                                        <input class="form-control form-control-sm" @bind-value="filtro.Contacto" @oninput="FiltrarContacto" />
                                    </div>
                                </td>
                                <td></td>
                                <td>
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                                        <input class="form-control form-control-sm" @bind-value="filtro.EtapaVenta" @oninput="FiltrarEtapa" />
                                    </div>
                                </td>
                                <td></td>
                                <td>
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                                        <input class="form-control form-control-sm" @bind-value="filtro.Division" @oninput="FiltrarDivision" />
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                                        <input class="form-control form-control-sm" @bind-value="filtro.Equipo" @oninput="FiltrarEquipo" />
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                                        <input class="form-control form-control-sm" @bind-value="filtro.Vendedor" @oninput="FiltrarVendedor" />
                                    </div>
                                </td>
                                <td></td>
                            </tr>
                        </Filtros>
                        <Columnas Context="item">
                            <tr>
                                <AuthorizeView Roles="Admin, VER_DETALLE_OPORTUNIDAD, EDITAR_OPORTUNIDAD, ELIMINAR_OPORTUNIDAD, VER_DOCUMENTOS">
                                    <Authorized Context="ACCIONES">
                                        <td>
                                            <div class="btn-group" role="group">
                                                <AuthorizeView Roles="Admin, EDITAR_OPORTUNIDAD">
                                                    <Authorized Context="EDITAROPORTUNIDAD">
                                                        <NavLink class="btn gcom-bg-amarillo" href=@($"crm/oportunidades/formulario/{item.Id}")>
                                                            <i class="fa fa-solid fa-edit" />
                                                        </NavLink>
                                                    </Authorized>
                                                </AuthorizeView>
                                                <AuthorizeView Roles="Admin, VER_DETALLE_OPORTUNIDAD">
                                                    <Authorized Context="VERDETALLEOPORTUNIDAD">
                                                        <NavLink class="btn gcom-bg-amarillo" href=@($"crm/oportunidad/{item.Id}")>
                                                            <i class="fa fa-solid fa-eye" />
                                                        </NavLink>
                                                    </Authorized>
                                                </AuthorizeView>
                                                <AuthorizeView Roles="Admin, VER_DOCUMENTOS">
                                                    <Authorized Context="VERDOCUMENTOS">
                                                        <NavLink class="btn gcom-bg-amarillo"
                                                                 href="@($"crm/documento/?{nameof(DetalleDocumentoComponente.OportunidadId)}={item.Id}")">
                                                            <i class="fa fa-solid fa-folder-open" />
                                                        </NavLink>
                                                    </Authorized>
                                                </AuthorizeView>
                                                <AuthorizeView Roles="Admin, ELIMINAR_OPORTUNIDAD">
                                                    <Authorized Context="ELIMINAROPORTUNIDAD">
                                                        <button class="btn btn-danger" @onclick="@(()=>EliminarOportunidad(item))">
                                                            <i class="fa fa-solid fa-trash" />
                                                        </button>
                                                    </Authorized>
                                                </AuthorizeView>
                                            </div>
                                        </td>
                                    </Authorized>
                                </AuthorizeView>
                                <td>@item.Nombre_Opor</td>
                                <td>@item.Cuenta</td>
                                <td>
                                    <AuthorizeView Roles="Admin, VER_DETALLE_CONTACTOS">
                                        <Authorized Context="VERDETALLECONTACTO">
                                            <NavLink Match="NavLinkMatch.All" href=@($"crm/contacto/{item.ContactoId}")>
                                                @item.Contacto
                                            </NavLink>
                                        </Authorized>
                                        <NotAuthorized Context="VERDETALLECONTACTO">
                                            @item.Contacto
                                        </NotAuthorized>
                                    </AuthorizeView>
                                </td>
                                <td>@item.FechaCreacion</td>
                                <td>@item.EtapaVenta</td>
                                <td>$ @item.ValorOportunidad.ToString("N", CultureInfo.InvariantCulture)</td>
                                <td>@item.Division</td>
                                <td>
                                    <AuthorizeView Roles="Admin, VER_DETALLE_EQUIPO">
                                        <Authorized Context="VERDETALLEEQUIPO">
                                            <NavLink Match="NavLinkMatch.All" href=@($"crm/equipo/{item.EquipoId}")>
                                                @item.Equipo
                                            </NavLink>
                                        </Authorized>
                                        <NotAuthorized Context="VERDETALLEEQUIPO">
                                            @item.Equipo
                                        </NotAuthorized>
                                    </AuthorizeView>
                                </td>
                                <td>
                                    <AuthorizeView Roles="Admin, VER_DETALLE_VENDEDORES">
                                        <Authorized Context="VERDETALLEVENDEDOR">
                                            <NavLink Match="NavLinkMatch.All" href=@($"crm/vendedor/{item.VendedorId}")>
                                                @item.Vendedor
                                            </NavLink>
                                        </Authorized>
                                        <NotAuthorized Context="VERDETALLEVENDEDOR">
                                            @item.Vendedor
                                        </NotAuthorized>
                                    </AuthorizeView>
                                </td>
                                <td>@item.Probabilidad %</td>
                            </tr>
                        </Columnas>
                    </Tabla>
                </div>
                <div class="col-12">
                    <PaginacionComponent PaginaActual="filtro.Pagina_ACtual" PaginasTotales="filtro.Total_paginas" PaginaSeleccionada="Pagina_Seleccionada" Radio="5" />
                    <div class="col-12">
                        <p>Total de registros: @filtro.Total_registros</p>
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin, VER_DOCUMENTOS">
            <Authorized Context="MODALDOCUMENTOS">
                <Modal_Custom @ref="modal" />
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin, VER_DETALLE_DOCUMENTO">
            <Authorized Context="VERDETALLEDOCUMENTO">
                <Modal_Custom @ref="modalDetalle" />
            </Authorized>
        </AuthorizeView>
    </Authorized>
</AuthorizeView>




@code {
    bool loading_info = false;
    List<CRMOportunidadDTO> Oportunidades = new();
    CRMOportunidadDTO filtro = new();
    Dictionary<string, string> query = new();
    Modal_Custom modal = null!;
    Modal_Custom modalDetalle = null!;

    protected override async Task OnInitializedAsync()
    {
        await ObtenerOportunidades();
    }

    private async Task ObtenerOportunidades()
    {
        try
        {
            loading_info = true;
            query[nameof(filtro.Excel)] = false.ToString();
            var uri = Constructor_De_URL_Parametros.Generar_URL(SetParameter());

            var response = await http.Get<List<CRMOportunidadDTO>>($"api/crmoportunidad?{uri}");
            if (response.Error)
            {
                loading_info = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_info = false;
                Oportunidades = response.Response;

                filtro.Total_paginas = Constructor_De_URL_Parametros.Obt_Total_Paginas(response.HttpResponseMessage);
                filtro.Total_registros = Constructor_De_URL_Parametros.Obt_Total_Registros(response.HttpResponseMessage);
                filtro.Pagina_ACtual = Constructor_De_URL_Parametros.Obt_Pagina_Actual(response.HttpResponseMessage);
            }
        }
        catch (Exception e)
        {
            loading_info = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

    private async Task Pagina_Seleccionada(int pagina)
    {
        filtro.Pagina_ACtual = pagina;
        filtro.Pagina = pagina;

        await ObtenerOportunidades();
    }

    private async Task FiltrarNombre(ChangeEventArgs args)
    {
        filtro.Nombre_Opor = args.Value?.ToString() ?? string.Empty;
        await ObtenerOportunidades();
    }

    private async Task FiltrarVendedor(ChangeEventArgs args)
    {
        filtro.Vendedor = args.Value?.ToString() ?? string.Empty;
        await ObtenerOportunidades();
    }

    private async Task FiltrarDivision(ChangeEventArgs args)
    {
        filtro.Division = args.Value?.ToString() ?? string.Empty;
        await ObtenerOportunidades();
    }

    private async Task FiltrarEquipo(ChangeEventArgs args)
    {
        filtro.Equipo = args.Value?.ToString() ?? string.Empty;
        await ObtenerOportunidades();
    }

    private async Task FiltrarEtapa(ChangeEventArgs args)
    {
        filtro.EtapaVenta = args.Value?.ToString() ?? string.Empty;
        await ObtenerOportunidades();
    }

    private async Task FiltrarCuenta(ChangeEventArgs args)
    {
        filtro.Cuenta = args.Value?.ToString() ?? string.Empty;
        await ObtenerOportunidades();
    }

    private async Task FiltrarContacto(ChangeEventArgs args)
    {
        filtro.Contacto = args.Value?.ToString() ?? string.Empty;
        await ObtenerOportunidades();
    }

    private Dictionary<string, string> SetParameter()
    {
        query[$"{nameof(filtro.Nombre_Opor)}"] = filtro.Nombre_Opor;
        query[$"{nameof(filtro.Vendedor)}"] = filtro.Vendedor;
        query[$"{nameof(filtro.Contacto)}"] = filtro.Contacto;
        query[$"{nameof(filtro.EtapaVenta)}"] = filtro.EtapaVenta;
        query[$"{nameof(filtro.Cuenta)}"] = filtro.Cuenta;
        query[$"{nameof(filtro.Pagina)}"] = filtro.Pagina.ToString();
        query[$"{nameof(filtro.Registros_por_pagina)}"] = filtro.Registros_por_pagina.ToString();
        query[nameof(filtro.Paginacion)] = true.ToString();
        return query;
    }

    private async Task ExportarOportunidades()
    {
        try
        {
            loading_info = true;
            query[nameof(filtro.Excel)] = true.ToString();

            var uri = Constructor_De_URL_Parametros.Generar_URL(SetParameter());

            var response = await http.Get<byte[]>($"api/crmoportunidad?{uri}");
            if (response.Error)
            {
                loading_info = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_info = false;

                await js.GuardarComo($"Oportunidades_{DateTime.Now:g}.xlsx", response.Response);
            }
        }
        catch (Exception e)
        {
            loading_info = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

    private async Task EliminarOportunidad(CRMOportunidadDTO crm)
    {
        try
        {
            var confirm = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminacion",
                Text = $"¿Desea eliminar la oportunidad {crm.Nombre_Opor}?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Aceptar",
                CancelButtonText = "Cancelar"
            });
            if (!string.IsNullOrEmpty(confirm.Value))
            {

                var response = await http.Delete($"api/crmoportunidad/{crm.Id}");
                if (response.Error)
                {
                    var message = await response.ObtenerMensajeError();
                    await swal.FireAsync("Error", message, SweetAlertIcon.Error);
                }
                else
                {
                    await ObtenerOportunidades();
                }
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

}
