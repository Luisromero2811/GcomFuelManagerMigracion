@inject IRepositorio http
@inject SweetAlertService Swal
@inject NotificationService ns

<Card LoadingContent="loading">
    <Header>
        <b>Fechas de cierre</b>
    </Header>
    <Body>
        <div class="col-12 row">
            <div class="col-4">
                <label>De:</label>
                <InputDate Type="InputDateType.Date" @bind-Value="Cierre.Fecha_Inicio" class="form-control form-control-sm" />
            </div>
            <div class="col-4">
                <label>De:</label>
                <InputDate Type="InputDateType.Date" @bind-Value="Cierre.Fecha_Fin" class="form-control form-control-sm" />
            </div>
            <div class="col-4 d-flex">
                @if (!loading)
                {
                    <button class="col-12 btn btn-sm gcom-bg-amarillo mt-auto" @onclick="CerrarInventario">
                        <i class="fa fa-solif fa-lock" /> Cerrar inventario
                    </button>
                }
                else
                {
                    <button class="col-12 btn btn-sm gcom-bg-amarillo mt-auto" disabled>
                        <i class="fa fa-solif fa-lock" /> Cerrar inventario
                    </button>
                }
            </div>
        </div>
    </Body>
</Card>

@code {
    [Parameter] public int Id { get; set; } = new();
    [Parameter] public EventCallback ReloadInventario { get; set; }

    InventarioCierreDTO Cierre = new();

    bool loading = false;

    private Dictionary<string, string> SetQuery()
    {
        Dictionary<string, string> Query = new();

        Query[nameof(InventarioCierreDTO.Fecha_Inicio)] = Cierre.Fecha_Inicio.ToString("MM/dd/yyyy");
        Query[nameof(InventarioCierreDTO.Fecha_Fin)] = Cierre.Fecha_Fin.ToString("MM/dd/yyyy");
        Query[nameof(InventarioCierreDTO.Id)] = Id.ToString();

        return Query;
    }


    private async Task CerrarInventario()
    {
        try
        {
            loading = true;
            var url = Constructor_De_URL_Parametros.Generar_URL(SetQuery());
            var response = await http.Get<bool>($"api/inventario/cierre/cerrar?{url}");
            if (response.Error)
            {
                loading = false;
                await Swal.FireAsync("Error", await response.ObtenerMensajeError(), SweetAlertIcon.Error);
            }
            else
            {
                loading = false;
                await ReloadInventario.InvokeAsync();
            }
        }
        catch (Exception e)
        {
            loading = false;
            await Swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }
}
